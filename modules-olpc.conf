#
# This file contains a listing of available modules.
# To prevent a module from  being used in policy
# creation, set the module name to "off".
#
# For monolithic policies, modules set to "base" and "module"
# will be built into the policy.
#
# For modular policies, modules set to "base" will be
# included in the base module.  "module" will be compiled
# as individual loadable modules.
#

# Layer: admin
# Module: acct
#
# Berkeley process accounting
# 
acct = base

# Layer: admin
# Module: alsa
#
# Ainit ALSA configuration tool
# 
alsa = base

# Layer: apps
# Module: ada
#
# ada executable
# 
ada = base

# Layer: admin
# Module: anaconda
#
# Policy for the Anaconda installer.
# 
anaconda = base

# Layer: system
# Module: application
# Required in base
#
# Defines attributs and interfaces for all user applications
# 
application = base

# Layer: system
# Module: authlogin
#
# Common policy for authentication and user login.
# 
authlogin = base

# Layer: services
# Module: canna
#
# Canna - kana-kanji conversion server
# 
canna = base

# Layer: system
# Module: clock
#
# Policy for reading and setting the hardware clock.
# 
clock = base

# Layer: admin
# Module: consoletype
#
# Determine of the console connected to the controlling terminal.
# 
consoletype = base

# Layer: kernel
# Module: corecommands
# Required in base
#
# Core policy for shells, and generic programs
# in /bin, /sbin, /usr/bin, and /usr/sbin.
# 
corecommands = base

# Layer: kernel
# Module: corenetwork
# Required in base
#
# Policy controlling access to network objects
# 
corenetwork = base

# Layer: services
# Module: cpucontrol
#
# Services for loading CPU microcode and CPU frequency scaling.
# 
cpucontrol = base

# Layer: services
# Module: dbus
#
# Desktop messaging bus
# 
dbus = base

# Layer: kernel
# Module: devices
# Required in base
#
# Device nodes and interfaces for many basic system devices.
# 
devices = base

# Layer: services
# Module: dhcp
#
# Dynamic host configuration protocol (DHCP) server
# 
dhcp = base

# Layer: system
# Module: domain
# Required in base
#
# Core policy for domains.
# 
domain = base

# Layer: kernel
# Module: files
# Required in base
#
# Basic filesystem types and interfaces.
# 
files = base

# Layer: kernel
# Module: filesystem
# Required in base
#
# Policy for filesystems.
# 
filesystem = base

# Layer: system
# Module: fstools
#
# Tools for filesystem management, such as mkfs and fsck.
# 
fstools = base

# Layer: system
# Module: getty
#
# Policy for getty.
# 
getty = base

# Layer: services
# Module: hal
#
# Hardware abstraction layer
# 
hal = base

# Layer: system
# Module: hotplug
#
# Policy for hotplug system, for supporting the
# connection and disconnection of devices at runtime.
# 
hotplug = base

# Layer: system
# Module: init
#
# System initialization programs (init and init scripts).
# 
init = base

# Layer: system
# Module: iptables
#
# Policy for iptables.
# 
iptables = base

# Layer: apps
# Module: java
#
# java executable
# 
java = base

# Layer: kernel
# Module: kernel
# Required in base
#
# Policy for kernel threads, proc filesystem,and unlabeled processes and objects.
# 
kernel = base

# Layer: admin
# Module: kudzu
#
# Hardware detection and configuration tools
# 
kudzu = base

# Layer: system
# Module: libraries
#
# Policy for system libraries.
# 
libraries = base

# Layer: system
# Module: locallogin
#
# Policy for local logins.
# 
locallogin = base

# Layer: system
# Module: logging
#
# Policy for the kernel message logger and system logging daemon.
# 
logging = base

# Layer: kernel
# Module: mcs
# Required in base
#
# MultiCategory security policy
# 
mcs = base

# Layer: system
# Module: miscfiles
#
# Miscelaneous files.
# 
miscfiles = base

# Layer: system
# Module: modutils
#
# Policy for kernel module utilities
# 
modutils = base

# Layer: apps
# Module: mono
#
# mono executable
# 
mono = base

# Layer: admin
# Module: netutils
#
# Network analysis utilities
# 
netutils = base

# Layer: services
# Module: networkmanager
#
# Manager for dynamically switching between networks.
# 
networkmanager = base

# Layer: services
# Module: nscd
#
# Name service cache daemon
# 
nscd = base

# Layer: services
# Module: ntp
#
# Network time protocol daemon
# 
ntp = base

# Layer: admin
# Module: prelink
#
# Manage temporary directory sizes and file ages
# 
prelink = base

# Layer: admin
# Module: readahead
#
# Readahead, read files into page cache for improved performance
# 
readahead = base

# Layer: admin
# Module: rpm
#
# Policy for the RPM package manager.
# 
rpm = base

# Layer: kernel
# Module: selinux
# Required in base
#
# Policy for kernel security interface, in particular, selinuxfs.
# 
selinux = base

# Layer: system
# Module: selinuxutil
#
# Policy for SELinux policy and userland applications.
# 
selinuxutil = base

# Layer: kernel
# Module: storage
#
# Policy controlling access to storage devices
# 
storage = base

# Layer: system
# Module: sysnetwork
#
# Policy for network configuration: ifconfig and dhcp client.
# 
sysnetwork = base

# Layer: system
# Module: udev
#
# Policy for udev.
# 
udev = base

# Layer: system
# Module: userdomain
#
# Policy for user domains
# 
userdomain = base

# Layer: system
# Module: unconfined
#
# The unconfined domain.
# 
unconfined = base 

# Layer: admin
# Module: usbmodules
#
# List kernel modules of USB devices
# 
usbmodules = base

# Layer: services
# Module: xfs
#
# X Windows Font Server
# 
xfs = base

# Layer: services
# Module: xserver
#
# X windows login display manager
# 
xserver = base

# Module: terminal
# Required in base
#
# Policy for terminals.
# 
terminal = base

# Layer: kernel
# Module: mls
# Required in base
#
# Multilevel security policy
# 
mls = base

